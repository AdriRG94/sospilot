# Example dataflow-D (Assessment Methods metadata) report generation using Stetl with Jinja2 templating filter.
# The input data comes directly from a WFS providing station info.
# The template files and global variables (globals.json) are under templates folder.
#
# All rendered output under output/
#
[etl]
chains = input_json|dataflow-D_template|output_dataflow-D_file

[input_json]
class = inputs.fileinput.JsonFileInput
file_path = http://sensors.geonovum.nl/gs/ows?service=WFS&request=GetFeature&typeName=sensors:active_stations&outputformat=JSON&srsName=EPSG:4326
# file_path = input/stations.json
# file_path = input/stations-small.json

# Advanced gml templating with globals for more or less static content
# in rivm-globals.json like id-prefixes and contact info etc
[dataflow-D_template]
class = filters.templatingfilter.Jinja2TemplatingFilter
template_file = templates/dataflow-D.jinja2
template_globals_path = input/globals-rivm.json

[output_dataflow-D_file]
class = outputs.fileoutput.FileOutput
file_path = output/dataflow-D.xml

# Validator for XML  (TODO)
[xml_schema_validator]
class = filters.xmlvalidator.XmlSchemaValidator
xsd = gmlcities.xsd
enabled = True

# for testing/debugging only
[output_std]
class = outputs.standardoutput.StandardOutput
